name: API Laravel Tests (Unit | Feature)

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  tests:
    name: Run laravel tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: app_dev
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: laraveldocker
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3

      redis:
        image: redis:5.0
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, dom, fileinfo, pgsql
          coverage: xdebug

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_ENV

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ env.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-interaction --optimize-autoloader
        working-directory: ./project

      - name: Prepare Laravel Application
        run: |
          cp .env.testing .env
          php artisan key:generate
        working-directory: ./project

      - name: Run Unit Tests
        run: php artisan test --parallel --testsuite Unit
        working-directory: ./project

      - name: Run Feature Tests
        run: php artisan test --parallel --testsuite Feature
        working-directory: ./project
        env:
          DB_HOST: localhost
          DB_PORT: ${{ job.services.postgres.ports[5432] }}
          REDIS_HOST: localhost
          REDIS_PORT: ${{ job.services.redis.ports[6379] }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: Logs
          path: ./project/storage/logs