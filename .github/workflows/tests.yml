name: Testing Laravel with PostgreSQL
on:
  pull_request:
  push:
    branches:
      - main
jobs:
  laravel:
    name: Laravel (PHP ${{ matrix.php-versions }})
    runs-on: ubuntu-latest

    # Docs: https://docs.github.com/en/actions/using-containerized-services
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: app_dev
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: laraveldocker
        ports:
          - 5433:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3

      redis:
        image: "redis:5.0"
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['8.2']
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Docs: https://github.com/shivammathur/setup-php
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, dom, fileinfo, pgsql
          coverage: xdebug

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: |
          cd project/
          composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Prepare the application
        run: |
          cd project/
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          php -r "file_exists('.env.testing') || copy('.env.testing.example', '.env');"
          php artisan key:generate

      - name: Clear Config
        run: |
          cd project/
          php artisan config:clear

      - name: Run Migration
        run: |
          cd project/
          php artisan migrate -v
        env:
          DB_HOST: localhost
          DB_PORT: ${{ job.services.postgres.ports[5432] }}

      - name: Run tests (Unit)
        working-directory: ./project
        run: php artisan test --parallel --testsuite Unit

      - name: Run tests (Feature)
        working-directory: ./project
        run: php artisan test --parallel --testsuite Feature
        env:
          DB_HOST: localhost
          DB_PORT: ${{ job.services.postgres.ports[5432] }}
          REDIS_HOST: localhost
          REDIS_PORT: ${{ job.services.redis.ports[6379] }}